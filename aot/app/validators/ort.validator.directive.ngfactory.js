/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
import * as import0 from '../../../app/validators/ort.validator.directive';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import3 from '@angular/core/src/linker/view_utils';
var Wrapper_OrtValidatorDirective = (function () {
    function Wrapper_OrtValidatorDirective() {
        this._changed = false;
        this.context = new import0.OrtValidatorDirective();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_OrtValidatorDirective.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_OrtValidatorDirective.prototype.ngOnDestroy = function () {
    };
    Wrapper_OrtValidatorDirective.prototype.check_ort = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.ort = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_OrtValidatorDirective.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        return changed;
    };
    Wrapper_OrtValidatorDirective.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_OrtValidatorDirective.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_OrtValidatorDirective.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_OrtValidatorDirective;
}());
export { Wrapper_OrtValidatorDirective };
//# sourceMappingURL=ort.validator.directive.ngfactory.js.map